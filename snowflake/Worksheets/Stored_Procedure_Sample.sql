CREATE OR REPLACE PROCEDURE DATA_REF.VALIDATE_SOURCE_SCHEMA("SOURCE_DATABASE" VARCHAR(16777216), "SOURCE_SCHEMA" VARCHAR(16777216), "VALIDATION_TYPE" VARCHAR(16777216), "SOURCE_TABLE" VARCHAR(16777216) DEFAULT NULL)
RETURNS VARCHAR(16777216)
LANGUAGE SQL
EXECUTE AS OWNER
AS '
DECLARE
    TABLE_CHECK STRING;
    SCHEMA_CHECK STRING;
    v_sql STRING;
    result RESULTSET;
    
BEGIN
    IF (UPPER(VALIDATION_TYPE) = ''SCHEMA'') THEN
        v_sql := ''SELECT DISTINCT TABLE_SCHEMA FROM "'' || SOURCE_DATABASE || ''".INFORMATION_SCHEMA.TABLES WHERE TABLE_CATALOG = '''''' || SOURCE_DATABASE || '''''' AND TABLE_SCHEMA = '''''' || SOURCE_SCHEMA || '''''''';
        result := (EXECUTE IMMEDIATE :v_sql);
        FOR record IN result DO
            SCHEMA_CHECK := record.TABLE_SCHEMA;
        END FOR;
        IF (UPPER(SOURCE_SCHEMA) = SCHEMA_CHECK) THEN
            RETURN ''Valid'';
        ELSE 
            RETURN ''Invalid'';    
        END IF; 
        
    ELSEIF (UPPER(VALIDATION_TYPE) = ''TABLE'') THEN 
        v_sql := ''SELECT DISTINCT TABLE_NAME FROM "'' || SOURCE_DATABASE || ''".INFORMATION_SCHEMA.TABLES WHERE TABLE_CATALOG = '''''' || SOURCE_DATABASE || '''''' AND TABLE_NAME = '''''' || SOURCE_TABLE || '''''' AND TABLE_SCHEMA = '''''' || SOURCE_SCHEMA || '''''''';
        result := (EXECUTE IMMEDIATE :v_sql);
        FOR record IN result DO
            TABLE_CHECK := record.TABLE_NAME;
        END FOR;
        IF (UPPER(SOURCE_TABLE) = TABLE_CHECK) THEN
            RETURN ''Valid'';
        ELSE
            RETURN ''Invalid'';    
        END IF; 
    ELSE
        RETURN ''Error''; 
    END IF;
END;
';