-- SETUP: MARKETING DATABASE AND ROLE MANAGEMENT (RBAC)

-- STEP 1: CREATE DATABASE AND TABLE
USE ROLE SYSADMIN;

CREATE DATABASE IF NOT EXISTS ANALYTICS_DB;
CREATE SCHEMA IF NOT EXISTS ANALYTICS_DB.MARKETING;

CREATE TABLE IF NOT EXISTS ANALYTICS_DB.MARKETING.CAMPAIGN (
    ID INT,
    COST NUMERIC,
    SALES_AMOUNT NUMERIC
);

-- STEP 2: CREATE ROLE AND USER (REPLACE WITH AD OR FEDERATED IDENTITY IF POSSIBLE)
USE ROLE SECURITYADMIN;

CREATE ROLE IF NOT EXISTS MARKETING_ADMIN;

-- Replace with SSO/Federated Auth in production
CREATE USER IF NOT EXISTS DEMO_USER
  PASSWORD = 'TempPass123!' -- Placeholder only, use federated SSO in real setups
  DEFAULT_ROLE = MARKETING_ADMIN;

-- Assign role to user
GRANT ROLE MARKETING_ADMIN TO USER DEMO_USER;

-- Optionally assign role to another role (e.g., SYSADMIN for admin visibility)
GRANT ROLE MARKETING_ADMIN TO ROLE SYSADMIN;

-- STEP 3: GRANT PRIVILEGES TO ROLE
GRANT USAGE ON DATABASE ANALYTICS_DB TO ROLE MARKETING_ADMIN;
GRANT USAGE ON SCHEMA ANALYTICS_DB.MARKETING TO ROLE MARKETING_ADMIN;

GRANT SELECT, INSERT ON TABLE ANALYTICS_DB.MARKETING.CAMPAIGN TO ROLE MARKETING_ADMIN;
GRANT CREATE TABLE ON SCHEMA ANALYTICS_DB.MARKETING TO ROLE MARKETING_ADMIN;

-- Grant SELECT on all existing and future tables
GRANT SELECT ON ALL TABLES IN SCHEMA ANALYTICS_DB.MARKETING TO ROLE MARKETING_ADMIN;
GRANT SELECT ON FUTURE TABLES IN SCHEMA ANALYTICS_DB.MARKETING TO ROLE MARKETING_ADMIN;

-- Assign warehouse access
GRANT USAGE ON WAREHOUSE COMPUTE_WH TO ROLE MARKETING_ADMIN;

-- (OPTIONAL) Transfer schema ownership to the role
-- Note: Must REVOKE first, then re-GRANT OWNERSHIP
REVOKE USAGE ON SCHEMA ANALYTICS_DB.MARKETING FROM ROLE MARKETING_ADMIN;
GRANT OWNERSHIP ON SCHEMA ANALYTICS_DB.MARKETING TO ROLE MARKETING_ADMIN;

-- STEP 4: AUDIT ROLES & PRIVILEGES

-- Who has what privileges?
SHOW GRANTS TO ROLE MARKETING_ADMIN;

-- Who is assigned to the role?
SHOW GRANTS OF ROLE MARKETING_ADMIN;

-- STEP 5: FULL PRIVILEGE-AUDIT VIEW (JOIN ROLES & USERS)
WITH All_Roles_And_Privileges AS (
    SELECT
        Created_On,
        Modified_On,
        Privilege,
        Granted_On,
        Table_Catalog,
        Table_Schema,
        Name AS Name_Granted,
        Granted_To,
        Grantee_Name AS Grantee_Role_Name,
        Deleted_On
    FROM
        SNOWFLAKE.ACCOUNT_USAGE.GRANTS_TO_ROLES
),
Roles_Assigned_To_Users AS (
    SELECT
        Created_On,
        Deleted_On,
        Role AS Role_Granted,
        Granted_To,
        Grantee_Name AS User_Name,
        Granted_By
    FROM
        SNOWFLAKE.ACCOUNT_USAGE.GRANTS_TO_USERS
)
SELECT
    t.*,
    u.User_Name
FROM
    All_Roles_And_Privileges t
LEFT JOIN
    Roles_Assigned_To_Users u
    ON t.Grantee_Role_Name = u.Role_Granted
WHERE
    t.Deleted_On IS NULL
    AND u.Deleted_On IS NULL;

-- STEP 6: CLEANUP (IF REQUIRED)
-- USE ROLE SYSADMIN;
-- DROP DATABASE ANALYTICS_DB;

-- USE ROLE SECURITYADMIN;
-- DROP ROLE MARKETING_ADMIN;
-- DROP USER DEMO_USER;
