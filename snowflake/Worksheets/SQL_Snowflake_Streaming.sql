

-- --KAFKA_CES for prod, KAFKA_CES_SIT/KAFKA_CES_UAT
USE ROLE KAFKA_CES;

ALTER TABLE LANDING.CES_MSCM_KAFKA_PROD.CONSUMERWATCHLISTEVENT set CHANGE_TRACKING=TRUE;
  
USE ROLE DBT_CES_SA;

CREATE STREAM LANDING.CES_MSCM_KAFKA_PROD.CONSUMER_WATCHLIST_S_D ON TABLE LANDING.CES_MSCM_KAFKA_PROD.CONSUMERWATCHLISTEVENT;
CREATE STREAM LANDING.CES_MSCM_KAFKA_PROD.CONSUMER_WATCHLIST_S_P ON TABLE LANDING.CES_MSCM_KAFKA_PROD.CONSUMERWATCHLISTEVENT;

;

SELECT * FROM LANDING.CES_MSCM_KAFKA_UAT.CONSUMER_WATCHLIST_S

;
WITH source AS (
SELECT * FROM  LANDING.CES_MSCM_KAFKA_UAT.CONSUMERWATCHLISTEVENT
), WATCHLIST_FLATTEN AS (
SELECT
     s.RECORD_CONTENT:id::string as KAFKA_ID
    ,s.RECORD_CONTENT:data:customerId::string as CUSTOMER_ID
    ,s.RECORD_CONTENT:data:customerNumber::string as CUSTOMER_NUMBER
    ,s.RECORD_CONTENT:data:markAsDeleted::boolean as MARK_AS_DELETED
    ,s.RECORD_CONTENT:data:multiSchemeId::string as MULTI_SCHEME_ID
    ,s.RECORD_CONTENT:datetime::TIMESTAMP_NTZ as KAFKA_DATETIME
    ,s.RECORD_CONTENT:modifiedBy::string as MODIFIED_BY
    ,s.RECORD_CONTENT:source::string as SOURCE
    ,s.RECORD_CONTENT:subject::string as SUBJECT
    ,s.RECORD_CONTENT:type::string as EVENT_TYPE
FROM source as s )
SELECT * FROM WATCHLIST_FLATTEN
QUALIFY row_number() OVER (PARTITION BY KAFKA_ID ORDER BY KAFKA_DATETIME DESC) = 1

;
WITH source AS (
SELECT * FROM  LANDING.CES_MSCM_KAFKA_UAT.CONSUMERWATCHLISTEVENT
), WATCHLIST_FLATTEN AS (
SELECT
     s.RECORD_CONTENT:id::string as KAFKA_ID
    ,s.RECORD_CONTENT:data:customerId::string as CUSTOMER_ID
    ,s.RECORD_CONTENT:data:customerNumber::string as CUSTOMER_NUMBER
    ,s.RECORD_CONTENT:data:markAsDeleted::boolean as MARK_AS_DELETED
    ,s.RECORD_CONTENT:data:multiSchemeId::string as MULTI_SCHEME_ID
    ,s.RECORD_CONTENT:datetime::TIMESTAMP_NTZ as KAFKA_DATETIME
    ,s.RECORD_CONTENT:modifiedBy::string as MODIFIED_BY
    ,s.RECORD_CONTENT:source::string as SOURCE
    ,s.RECORD_CONTENT:subject::string as SUBJECT
    ,s.RECORD_CONTENT:type::string as EVENT_TYPE
FROM source as s ), latest_modified as (
SELECT DISTINCT
w.CUSTOMER_ID || '-'|| w.SUBJECT as ID,
--CASE WHEN w.MARK_AS_DELETED = 'FALSE' THEN 'MODIFICATION' ELSE 'DELETION' END AS DELETION_FLAG,
w.KAFKA_DATETIME AS LATEST_DATE_MODIFIED,
CUSTOMER_NUMBER,
MULTI_SCHEME_ID,
MODIFIED_BY, 
SOURCE,
EVENT_TYPE
FROM WATCHLIST_FLATTEN w
WHERE w.MARK_AS_DELETED = 'FALSE'
QUALIFY row_number() OVER (PARTITION BY ID ORDER BY LATEST_DATE_MODIFIED DESC) = 1
), deletion as (
SELECT DISTINCT
w.CUSTOMER_ID || '-'|| w.SUBJECT as ID,
--CASE WHEN w.MARK_AS_DELETED = 'FALSE' THEN 'MODIFICATION' ELSE 'DELETION' END AS DELETION_FLAG,
w.KAFKA_DATETIME AS DATE_DELETION,
CUSTOMER_NUMBER,
MULTI_SCHEME_ID,
MODIFIED_BY, 
SOURCE,
EVENT_TYPE
FROM WATCHLIST_FLATTEN w
WHERE w.MARK_AS_DELETED = 'TRUE'
QUALIFY row_number() OVER (PARTITION BY ID ORDER BY DATE_DELETION DESC) = 1
)
SELECT 
m.ID,
m.CUSTOMER_NUMBER,
m.MULTI_SCHEME_ID,
m.LATEST_DATE_MODIFIED,
d.DATE_DELETION, 
m.MODIFIED_BY,
m.SOURCE, 
m.EVENT_TYPE

FROM latest_modified m
left join deletion d on d.ID = m.ID


;

WITH source AS (
        SELECT * FROM LANDING.CES_MSCM_KAFKA_UAT.CONSUMERWATCHLISTEVENT
    ), WATCHLIST_FLATTEN AS (
        SELECT
             s.RECORD_CONTENT:id::string as KAFKA_ID,
             s.RECORD_CONTENT:data:customerId::string as CUSTOMER_ID,
             s.RECORD_CONTENT:data:customerNumber::string as CUSTOMER_NUMBER,
             s.RECORD_CONTENT:data:markAsDeleted::boolean as MARK_AS_DELETED,
             s.RECORD_CONTENT:data:multiSchemeId::string as MULTI_SCHEME_ID,
             s.RECORD_CONTENT:datetime::TIMESTAMP_NTZ as KAFKA_DATETIME,
             s.RECORD_CONTENT:modifiedBy::string as MODIFIED_BY,
             s.RECORD_CONTENT:source::string as SOURCE,
             s.RECORD_CONTENT:subject::string as SUBJECT,
             s.RECORD_CONTENT:type::string as EVENT_TYPE
        FROM source as s
    ), UAT_DUPLICATE_CATCHER AS(   -- THIS PART IS NOT NEEDED IN PROD, ONLY IN UAT due to data complexities
        SELECT
             MAX(KAFKA_ID) AS KAFKA_ID,
             MAX(KAFKA_DATETIME) AS KAFKA_DATETIME,
             CUSTOMER_ID,
             CUSTOMER_NUMBER,
             MARK_AS_DELETED,
             MULTI_SCHEME_ID,
             MODIFIED_BY,
             SOURCE,
             SUBJECT,
             EVENT_TYPE
             FROM WATCHLIST_FLATTEN
             GROUP BY
             CUSTOMER_ID,
             CUSTOMER_NUMBER,
             MARK_AS_DELETED,
             MULTI_SCHEME_ID,
             MODIFIED_BY,
              SOURCE,
             SUBJECT,
             EVENT_TYPE

    )
    SELECT * FROM UAT_DUPLICATE_CATCHER
    QUALIFY row_number() OVER (PARTITION BY KAFKA_ID ORDER BY KAFKA_DATETIME DESC) = 1


;


--DROP TABLE RAW_UAT.CES_MSCM_KAFKA.CONSUMER_WATCHLIST ;


SELECT * FROM RAW_UAT.CES_MSCM_KAFKA.CONSUMER_WATCHLIST order by customer_id


;

SELECT * FROM RAW_PROD.CES_MSCM.SCHEME_REF_CODES WHERE CATEGORY = 'PYMT_WATCH_LIST' ; 

;

SELECT ROW_NUMBER() OVER (PARTITION BY CUSTOMER_NUMBER ORDER BY CUSTOMER_NUMBER ) ROW_NUM, * FROM RAW_PROD.CES_MSCM_KAFKA.CONSUMER_WATCHLIST 

QUALIFY ROW_NUMBER() OVER (PARTITION BY CUSTOMER_NUMBER ORDER BY CUSTOMER_NUMBER )  > 1 ;


SELECT * FROM RAW_DEV.CES_MSCM_KAFKA.CONSUMER_WATCHLIST  WHERE  CUSTOMER_NUMBER IN ('C10446104','C10446092','C10568212','C10568185') ORDER BY CUSTOMER_NUMBER