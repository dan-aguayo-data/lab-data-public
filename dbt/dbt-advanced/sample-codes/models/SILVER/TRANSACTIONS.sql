--##### SILVER SAMPLE MODEL #####



{{
    config(
        enabled=run_flag_exclude_all()
    )
}}

WITH STOCK_HDR AS (
    SELECT 
        HDR.RECORD_ID,
        HDR.PROGRAM_CODE,
        HDR.DEPOT_CODE,
        HDR.CLIENT_ID,
        HDR.TERMINAL_ID,
        HDR.PROCESSED_ON,
        HDR.PROCESSED_BY,
        HDR.IDENTIFICATION_TYPE,
        CASE WHEN HDR.PROGRAM_CODE <> CL.PROGRAM_CODE THEN HDR.CLIENT || '001' ELSE HDR.CLIENT END AS CLIENT_CROSS_PROGRAM,
        CASE WHEN HDR.PROGRAM_CODE <> CL_RECIP.PROGRAM_CODE THEN HDR.CLIENT_ID || '001' ELSE HDR.CLIENT_ID END AS CLIENT_ID_CROSS_PROGRAM
    FROM 
        {{ source('DATA_HUB', 'STOCK_TXN_HEADER') }} AS HDR
        LEFT JOIN {{ source('DATA_HUB', 'VENDOR_LOCATIONS') }} CL ON HDR.CLIENT = CL.LOCATION_CODE
        LEFT JOIN {{ source('DATA_HUB', 'VENDOR_LOCATIONS') }} CL_RECIP ON HDR.CLIENT_ID = CL_RECIP.LOCATION_CODE
), STOCK_DTL AS (
    SELECT
        DTL.*,
        CASE WHEN DTL.ITEM_CATEGORY_ID NOT LIKE '%INVALID%' THEN DTL.QUANTITY ELSE 0 END AS VALID_QUANTITY,
        CASE WHEN DTL.ITEM_CATEGORY_ID NOT LIKE '%INVALID%' THEN DTL.TOTAL_VALUE ELSE 0 END AS VALID_TOTAL_VALUE,
        CASE WHEN DTL.ITEM_CATEGORY_ID NOT LIKE '%INVALID%' THEN DTL.TAX_AMOUNT ELSE 0 END AS VALID_TAX_AMOUNT,
        CASE WHEN DTL.ITEM_CATEGORY_ID NOT LIKE '%INVALID%' THEN DTL.NET_AMOUNT ELSE 0 END AS VALID_NET_AMOUNT,
        CASE WHEN DTL.ITEM_CATEGORY_ID LIKE '%INVALID%' THEN DTL.QUANTITY ELSE 0 END AS INVALID_QUANTITY
    FROM 
        {{ source('DATA_HUB', 'STOCK_TXN_DETAILS') }} AS DTL
), STOCK_MOVEMENT AS (
    SELECT
        --Natural Key
        DTL.RECORD_ID,
        --Attributes
        DTL.TXN_ID,
        DTL.PROGRAM_CODE,
        PROGRAM.TITLE AS PROGRAM,
        PROGRAM.REGION,
        DTL.ITEM_CATEGORY_ID,
        IC.NAME AS ITEM_CATEGORY,
        DTL.PACKAGE_UNIT_ID,
        HDR.DEPOT_CODE AS DEPOT_CODE,
        PD.DEPOT_ID AS DEPOT_ID_POS,
        HDR.CLIENT_ID,
        HDR.TERMINAL_ID,
        HDR.PROCESSED_ON,
        PS.VENDOR_ID AS VENDOR_ID,
        CS.LOCATION_CODE AS CLIENT_CODE,
        --Metrics
        DTL.QUANTITY,
        DTL.VALUE_PER_UNIT,
        DTL.TOTAL_VALUE,
        DTL.NET_AMOUNT,
        DTL.TAX_AMOUNT,
        DTL.VALID_QUANTITY,
        DTL.VALID_TOTAL_VALUE,
        DTL.VALID_TAX_AMOUNT,
        DTL.VALID_NET_AMOUNT,
        DTL.INVALID_QUANTITY,
        --Metadata Attributes
        DTL.ENTERED_BY,
        DTL.ENTERED_ON AS ENTERED_ON_UTC_TIMESTAMP,
        DTL.UPDATED_BY,
        DTL.UPDATED_ON AS UPDATED_ON_UTC_TIMESTAMP
    FROM 
        STOCK_HDR AS HDR
        INNER JOIN STOCK_DTL AS DTL ON HDR.RECORD_ID = DTL.TXN_ID
        INNER JOIN {{ source('DATA_HUB', 'ITEM_CATEGORY') }} AS IC ON DTL.ITEM_CATEGORY_ID = IC.ID
        INNER JOIN {{ source('DATA_HUB', 'PROGRAM') }} AS PROGRAM ON HDR.PROGRAM_CODE = PROGRAM.PROGRAM_CODE
        LEFT JOIN {{ source('DATA_HUB', 'TERMINAL_DEVICE') }} AS PD ON HDR.TERMINAL_ID = PD.ID
        LEFT JOIN {{ source('DATA_HUB', 'TERMINAL_USER') }} AS PU ON HDR.PROCESSED_BY = PU.ID
        LEFT JOIN {{ source('DATA_HUB', 'VENDOR_LOCATIONS') }} AS PS ON NVL(NULLIF(HDR.DEPOT_CODE,''), PD.DEPOT_ID) = PS.LOCATION_CODE
        LEFT JOIN {{ source('DATA_HUB', 'VENDORS') }} AS P ON PS.VENDOR_ID = P.VENDOR_ID
        LEFT JOIN {{ source('DATA_HUB', 'VENDOR_LOCATIONS') }} AS CS ON HDR.CLIENT_CROSS_PROGRAM = CS.LOCATION_CODE
        LEFT JOIN {{ source('DATA_HUB', 'VENDORS') }} AS CP ON CS.VENDOR_ID = CP.VENDOR_ID
        LEFT JOIN {{ source('DATA_HUB', 'ID_TYPE') }} AS PIT ON HDR.IDENTIFICATION_TYPE = PIT.ID
        LEFT JOIN {{ source('DATA_HUB', 'TXN_FEEDBACK') }} AS RTS ON HDR.RECORD_ID = RTS.TXN_ID AND RTS.FEEDBACK_TYPE = 'LOCATION'
        LEFT JOIN {{ source('DATA_HUB', 'PROGRAM_REF_CODES') }} AS R_TT ON CS.CLASSIFICATION_TYPE_ID = R_TT.PROGRAM_REF_CODES_ID
)
SELECT * FROM STOCK_MOVEMENT